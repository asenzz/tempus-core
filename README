SVRWorkspace contains the new platform for developing modular system.

It consists of multiple modules (libraries):

1. SVRMain (Main app for configuring and running)
2. SVRBusiness (the Service layer for managing domain model objects)
3. SVRPersist (the persistence layer for storing and reading persisted objects)
4. SVRCommon (the common (shared) functionality accross modules)
5. SVRModel (the domain model classes)

To build the app you may run make all while in SVRMain/Debug

To run the app you need to:

1. configure PostgreSQL database (connection string is configurable in SVRMain/include/main-config.hpp)
2. If you are linking dynamically, add the SVRBusiness, SVRCommon and SVRPersist libraries to LD_LIBRARY_PATH:
		- LD_LIBRARY_PATH=~/git/master/SVRWorkspace/SVRCommon/Debug:~/git/master/SVRWorkspace/SVRBusiness/Debug:~/git/master/SVRWorkspace/SVRPersist/Debug
		- export LD_LIBRARY_PATH

Note:
	- Change the value of *SQL_PROPERTIES_LOCATION* config variable according to the location on your disk (which is located in SVRWorkspace/SVRCommon/include/config/common.hpp)


Tempus is a project that unites researchers and engineers from several countries and academic institutions in order to
exchange ideas, learn and achieve the best performance in time series analysis using the latest methods in statistical analysis and signal processing.
It makes of HPC technologies such is OpenCL, Cilk Plus, CUDA and MPI to deliver maximum performance over highly scaled systems.
Our scalable, high performance support vector regression and decomposition methods allow us to achieve monthly average of 71% price
hit-rate per 4H EUR USD bars from the freely available data on the DukasCopy website, on a 4 x V100, 256 GB RAM single server in near-real-time (2 minutes delay).
Tempus can scale on hundreds of GPUs and thousands of CPUs increasing precision and almost linear increase in performance.

I would like to thank the Shehadi family for making this project possible.

Thanks to everyone involved at the Bulgarian Academy of Sciences lending their super computer,
Ben Gurion University at Ber-Sheva for computing servers, FINKI Macedonia, Taras Shevcenko University.

Authors:

me - Lead dreamer, Kernel gamma systematic selection, ADA boosting of weights, optimal EMD coefficients, integration and testing
prof Emanouil Atanasov - Design and implementation of chunking MIMO SVR, Online EVMD, kernels, CUDA and OpenCL parallelization
Andrey Bezrukov - Project architecture and skeleton, optimization and parallelization
Evgeniy Marinov - Actually accurate Online SVR
Bojko Perfanov - SVR Epsilon and Cost path computation, (almost) boundless Wavelet decomposition Ã  trous
Sergej Kondratiuk - SMO and Online SVR pilot implementation, cascaded SVM
Viktor Gjorgjievski - Initial project architecture design and implementation
Taras Maliarcuk - Infrastructure and project architecture
Guy Tal - Database and multithreading, optimization
Stiljan Stojanov -  Implementation of the MIMO SVR, EVMD, kernels,
Petar Simov - SVR and epsilon SVR path, infrastructure
Dimitar Conov - GA kernel
Stanislav Georgiev - Online SMO SVR, Wavelet decomposition
Dimitar Slavchev - OpenCL kernels
Vladimir Hizanov - Parameter tuning
Thanks to:
Kristina Eskenazi - PR and connections
Petar Ivanov - Web interface code
George Kour - ML consulting
prof Jihad El-Sana - Advice and support
prof Dejan Gjorgjevik - Consultancy and support, referring students at FINKI Skopje
prof William Cohen - ADA boost code
Oleg Gumbar, Milen Hristov, Aleksandar Miladinov, Ali Kasmu - Sysadmins
Vasil Savuliak - Referring people in Kiev
Rajcho Mukelov - Crazy and moral values preaching
