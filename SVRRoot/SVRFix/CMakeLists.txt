CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(SVRFix)

#Define project dependencies
SET(DEPENDENCIES SVRCommon SVRBusiness)
IF(EXPERIMENTAL_FEATURES)
    LINK_DIRECTORIES(${MATLAB_LINK_DIR})
ENDIF(EXPERIMENTAL_FEATURES)

INCLUDE(../../cmake/IncludeDependencies.cmake)
INCLUDE("../../cmake/SourceList.cmake")

FILE(GLOB SHARED_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/include/*.hpp" "${CMAKE_CURRENT_SOURCE_DIR}/lib/*.c" "${CMAKE_CURRENT_SOURCE_DIR}/lib/*.cpp")
# if($ENV{HOSTNAME} MATCHES "sl[0-9]+$")
#     find_package(OpenCV EXACT REQUIRED PATHS /opt/soft/opencv3.2/)
# else()
#     find_package(OpenCV 3.1 EXACT REQUIRED PATHS /usr/local/opencv3.1)
# endif()
FIND_PACKAGE(Boost ${Boost_MIN_VERSION} COMPONENTS program_options REQUIRED CONFIG)
INCLUDE_DIRECTORIES(include)

FIND_PACKAGE(QUICKFIX REQUIRED)
INCLUDE_DIRECTORIES(include ${QUICKFIX_INCLUDE_DIR})

INCLUDE_DIRECTORIES(include)

IF (BUILD_SHARED_LIBS)
    ADD_LIBRARY(${PROJECT_NAME}-shared SHARED ${SHARED_SOURCE_FILES})
ELSE()
    ADD_LIBRARY(${PROJECT_NAME}-shared STATIC ${SHARED_SOURCE_FILES})
ENDIF()
ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCE_FILES} ${COMMON_SOURCE_FILES})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${PROJECT_NAME}-shared ${JEMALLOC_LIBRARIES} ${DEPENDENCIES} ${Boost_LIBRARIES} ${QUICKFIX_LIBRARIES} atomic pthread rt)

FILE(GLOB_RECURSE ADDITIONAL_TEST_SOURCE_FILES "src/*.cpp")

FOREACH (TMP_PATH ${ADDITIONAL_TEST_SOURCE_FILES})
    STRING (FIND ${TMP_PATH} "main.cpp" EXCLUDE_FILE_FOUND)
    IF (NOT ${EXCLUDE_FILE_FOUND} EQUAL -1)
        list (REMOVE_ITEM ADDITIONAL_TEST_SOURCE_FILES ${TMP_PATH})
    ENDIF ()
ENDFOREACH(TMP_PATH)

SET(TEST_DEPENDENCIES ${QUICKFIX_LIBRARIES} ${PROJECT_NAME}-shared gtest gtest_main atomic rt)
include ("../../cmake/UnitTester.cmake")

