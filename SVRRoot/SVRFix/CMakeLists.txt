CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(SVRFix)

#Define project dependencies
SET(DEPENDENCIES SVRCommon SVRBusiness)
IF(EXPERIMENTAL_FEATURES)
    LINK_DIRECTORIES(${MATLAB_LINK_DIR})
ENDIF(EXPERIMENTAL_FEATURES)

FOREACH(DEP ${DEPENDENCIES})
    INCLUDE_DIRECTORIES(../${DEP}/include)
ENDFOREACH(DEP)

FILE(GLOB_RECURSE SOURCE_FILES "src/*.cpp")
IF(IDE STREQUAL "QT_CREATOR")
    FILE(GLOB_RECURSE SOURCE_FILES "src/*.cpp" "include/*.h" "include/*.hpp")
ENDIF(IDE STREQUAL "QT_CREATOR")
    
FILE(GLOB_RECURSE SHARED_OBJECT_SOURCE_FILES "shared/*.cpp")
IF(IDE STREQUAL "QT_CREATOR")
    FILE(GLOB_RECURSE SHARED_OBJECT_SOURCE_FILES "shared/*.cpp" "include/*.h" "include/*.hpp")
ENDIF(IDE STREQUAL "QT_CREATOR")

# if($ENV{HOSTNAME} MATCHES "sl[0-9]+$")
#     find_package(OpenCV EXACT REQUIRED PATHS /opt/soft/opencv3.2/)
# else()
#     find_package(OpenCV 3.1 EXACT REQUIRED PATHS /usr/local/opencv3.1)
# endif()
FIND_PACKAGE(Boost ${Boost_MIN_VERSION} COMPONENTS program_options REQUIRED)
INCLUDE_DIRECTORIES(include ${Boost_INCLUDE_DIR})

FIND_PACKAGE(QUICKFIX REQUIRED)
INCLUDE_DIRECTORIES(include ${QUICKFIX_INCLUDE_DIR})

include_directories(include)

add_library(${PROJECT_NAME}-shared SHARED ${SHARED_OBJECT_SOURCE_FILES})

add_executable(${PROJECT_NAME} ${SOURCE_FILES})

target_link_libraries(${PROJECT_NAME} ${PROJECT_NAME}-shared ${JEMALLOC_LIBRARIES} ${DEPENDENCIES} ${Boost_LIBRARIES} ${QUICKFIX_LIBRARIES} atomic pthread rt)

FILE(GLOB_RECURSE ADDITIONAL_TEST_SOURCE_FILES "src/*.cpp")

foreach (TMP_PATH ${ADDITIONAL_TEST_SOURCE_FILES})
    string (FIND ${TMP_PATH} "main.cpp" EXCLUDE_FILE_FOUND)
    if (NOT ${EXCLUDE_FILE_FOUND} EQUAL -1)
        list (REMOVE_ITEM ADDITIONAL_TEST_SOURCE_FILES ${TMP_PATH})
    endif ()
endforeach(TMP_PATH)

SET(TEST_DEPENDENCIES ${QUICKFIX_LIBRARIES} ${PROJECT_NAME}-shared atomic rt)
include ("../../cmake/UnitTester.cmake")

