get_queue_metadata = SELECT table_name, logical_name, user_name, description, resolution, legal_time_deviation, timezone, value_columns, missing_hours_retention, uses_fix_connection FROM input_queues WHERE user_name = ? AND logical_name = ? AND resolution = ?

get_queue_metadata_by_table_name = SELECT table_name, logical_name, user_name, description, resolution, legal_time_deviation, timezone, value_columns, missing_hours_retention, uses_fix_connection FROM input_queues WHERE table_name = ?

exists = SELECT COUNT(1) FROM input_queues where table_name = ?

exists_logical = SELECT COUNT(1) FROM input_queues where logical_name = ?

save_metadata = INSERT INTO input_queues VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

update_metadata = UPDATE input_queues SET logical_name = ?, description = ?, legal_time_deviation = ?, timezone = ?, uses_fix_connection = ? WHERE table_name = ?

create_queue_table = CREATE TABLE %s (%s CONSTRAINT %s_pk PRIMARY KEY (value_time)) INHERITS (input_queue_template) WITH (oids = false)

get_queue_data_by_table_name = SELECT * FROM %s WHERE value_time >= ? AND value_time <= ? ORDER BY value_time ASC

get_latest_queue_data_by_table_name = SELECT * FROM (SELECT * FROM %s WHERE value_time <= ? ORDER BY value_time DESC LIMIT ?) q1 ORDER BY value_time ASC

load_nth_last_row = SELECT * FROM %s WHERE value_time < ? ORDER BY value_time DESC OFFSET ? LIMIT 1

get_count_from_start = SELECT COUNT(*) FROM %s WHERE value_time < ?

remove_queue_table = DROP TABLE IF EXISTS %s

clear_queue_table = DELETE FROM %s

remove_queue_metadata = DELETE FROM input_queues WHERE table_name = ?

find_oldest_record = SELECT * FROM %s ORDER BY value_time ASC LIMIT 1

find_newest_record = SELECT * FROM %s ORDER BY value_time DESC LIMIT 1

get_last_updated_row = SELECT * FROM %s ORDER BY update_time DESC LIMIT 1

get_all_user_queues = SELECT table_name, logical_name, user_name, description, resolution, legal_time_deviation, timezone, value_columns, missing_hours_retention, uses_fix_connection FROM input_queues WHERE user_name = ?

get_all_queues_with_sign = SELECT table_name, logical_name, user_name, description, resolution, legal_time_deviation, timezone, value_columns, missing_hours_retention, uses_fix_connection FROM input_queues WHERE uses_fix_connection = ?

get_queue_value_times_between = SELECT value_time FROM %s WHERE value_time >= ? AND value_time < ? ORDER BY value_time ASC

update_row = UPDATE %s SET update_time = ?, tick_volume = ? %s WHERE value_time = ?

insert_row = INSERT INTO %s VALUES(?, ?, ? %s)

row_exists = SELECT TRUE FROM %s WHERE value_time = ?

get_missing_hours_start = select times from generate_series(timestamp ?, timestamp ?, -'? seconds'::interval) times(times) \
    where not exists ( \
            select 0 from %1% q \
            where q.value_time = times \
    ) limit 1 

get_missing_hours_end = select max(value_time) from %s where value_time < ? and value_time >= ?

get_reconciled_interval = select start_time, end_time from input_queue_reconciled_hours where table_name = '%s'

mark_interval_reconciled = select mark_interval_reconciled(?, ?::timestamp, ?::timestamp)

purge_missing_hours = delete from input_queue_reconciled_hours iqmh0 where table_name = ? and exists ( \
    select 1 from input_queue_reconciled_hours iqmh join input_queues iq on iqmh.table_name = iq.table_name and iqmh0.last_request_time + iq.missing_hours_retention < localtimestamp )

get_first_miss = select min(start_time) from input_queue_reconciled_hours where table_name = '%1%'

get_db_table_column_names = select column_name from INFORMATION_SCHEMA.COLUMNS where table_name = ? order by ordinal_position
